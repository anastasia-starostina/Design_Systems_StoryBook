import { SimpleInterpolation, StyledProps } from 'styled-components';
export declare type ModifierName = string;
export declare type ModifierNames = ModifierName[];
export declare type ModifierKeys = ModifierNames | ModifierName;
export declare type ResponsiveModifiersProp<MC, S> = {
    _?: keyof MC | (keyof MC)[];
} & {
    [key in keyof S]?: keyof MC | (keyof MC)[];
};
export declare type ModifiersProp<MC, S extends object = {}> = keyof MC | (keyof MC)[] | ResponsiveModifiersProp<MC, S>;
export interface ModifierObjValue {
    styles: SimpleInterpolation;
}
export declare type ModifierConfigValue = (props: ComponentProps) => SimpleInterpolation | ModifierObjValue;
export interface ModifiersConfig {
    [key: string]: ModifierConfigValue;
}
export declare type ComponentProps = StyledProps<any>;
//# sourceMappingURL=types.d.ts.map